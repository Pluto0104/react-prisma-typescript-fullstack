useNode: &useNode
  docker:
    - image: circleci/node:lts

useGcloud: &useGcloud
  docker:
    - image: google/cloud-sdk

useFirebase: &useFirebase
  docker:
    - image: devillex/docker-firebase

version: 2.1
jobs:
  install:
    <<: *useNode
    steps:
      - checkout
      - run:
          name: Import Backend ENV
          command: |
            export BRANCH_NAME_UPPERCASE=$(echo "${CIRCLE_BRANCH}" | tr a-z A-Z)
            export BACKEND_ENV=$(
              if [ "$BRANCH_NAME_UPPERCASE" != "PREPROD" ];
                then
                  printf '%s' "$(eval echo \"\$BACKEND_ENV_${BRANCH_NAME_UPPERCASE}\")";
                else 
                  printf '%s'  "${BACKEND_ENV_PROD}";
              fi
            )
            if [ "$BACKEND_ENV" != "" ];
              then
                printf '%s'  "$(echo "$BACKEND_ENV" | base64 --decode)" > ./backend/.env;
            fi
      - run:
          name: Import Frontend ENV
          command: |
            export BRANCH_NAME_UPPERCASE=$(echo "${CIRCLE_BRANCH}" | tr a-z A-Z)
            export FRONTEND_ENV=$(
              if [ "$BRANCH_NAME_UPPERCASE" != "PREPROD" ];
                then
                  printf '%s' "$(eval echo \"\$FRONTEND_ENV_${BRANCH_NAME_UPPERCASE}\")";
                else
                  printf '%s' "${FRONTEND_ENV_PROD}";
              fi
            )
            if [ "$FRONTEND_ENV" != "" ];
              then
                printf '%s' "$(echo "$FRONTEND_ENV" | base64 --decode)" > ./frontend/.env;
            fi
      - run:
          name: DEBUG
          command: |
            cat ./backend/.env
            cat ./frontend/.env
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - ${CACHE_VERSION}-yarn-packages-{{ checksum "yarn.lock" }}-{{ checksum "./frontend/yarn.lock" }}-{{ checksum "./backend/yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: ${CACHE_VERSION}-yarn-packages-{{ checksum "yarn.lock" }}-{{ checksum "./frontend/yarn.lock" }}-{{ checksum "./backend/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - backend/node_modules
            - frontend/node_modules
            - backend/.env
            - frontend/.env

  test-frontend:
    <<: *useNode
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Test Frontend
          command: cd frontend && yarn test
  build-frontend:
    <<: *useNode
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build Frontend
          command: cd frontend && yarn build
      - persist_to_workspace:
          root: .
          paths:
            - frontend/build
  deploy-frontend:
    <<: *useFirebase
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: |
          cd frontend
          set -a                  
          . ./.env
          set +a
          firebase deploy --token "$FIREBASE_TOKEN"

  test-backend:
    <<: *useNode
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Test Backend
          command: cd backend && yarn test
  deploy-prisma:
    <<: *useNode
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install prisma
          command: yarn global add prisma
      - run:
          name: Deploy prisma
          command: cd backend && yarn prisma:deploy
      - persist_to_workspace:
          root: .
          paths:
            - backend/generated
  deploy-backend:
    <<: *useGcloud
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: |
          cd backend
          set -a                  
          . ./.env
          set +a
          printf '%s' "$GCLOUD_SERVICE_KEY"
          printf '%s' "$GCLOUD_SERVICE_KEY" | gcloud auth activate-service-account --key-file=-
          gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GCLOUD_COMPUTE_ZONE}
          gcloud app deploy -v $CIRCLE_SHA1

onlyEnvBranches: &onlyEnvBranches
  filters:
    branches:
      only:
        - dev
        - preprod
        - prod

workflows:
  version: 2
  default:
    jobs:
      - install

      - test-frontend:
          requires:
            - install
      - build-frontend:
          requires:
            - install
      - deploy-frontend:
          <<: *onlyEnvBranches
          requires:
            - test-frontend
            - build-frontend

      - test-backend:
          requires:
            - install
      - deploy-prisma:
          <<: *onlyEnvBranches
          requires:
            - test-backend
      - deploy-backend:
          <<: *onlyEnvBranches
          requires:
            - deploy-prisma
